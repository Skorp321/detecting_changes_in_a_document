version: '3.8'

networks:
  oozo-network:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    container_name: oozo-postgres
    environment:
      POSTGRES_DB: oozo_db
      POSTGRES_USER: oozo_user
      POSTGRES_PASSWORD: oozo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - oozo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oozo_user -d oozo_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build: ./backend
    container_name: oozo-backend
    environment:
      DATABASE_URL: postgresql://oozo_user:oozo_password@postgres:5432/oozo_db
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    networks:
      - oozo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build: ./frontend
    container_name: oozo-frontend
    environment:
      VITE_ENABLE_WEB_VITALS: "true"
      VITE_API_URL: "/api"
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - oozo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 10s
    labels:
      - "com.example.service=frontend"
      - "com.example.monitoring=enabled"

volumes:
  postgres_data:
  backend_uploads:
  backend_logs: 